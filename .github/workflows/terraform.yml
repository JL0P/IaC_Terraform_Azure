name: Terraform IaC

on:
  push:
    branches: [ "main" ]
    paths: [ "infra/**" ]
  pull_request:
    paths: [ "infra/**" ]
  workflow_dispatch:

jobs:
  tf:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: infra

    env:
      ARM_USE_OIDC: "true"
      ARM_USE_AZUREAD: "true"
      ARM_TENANT_ID:       ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_CLIENT_ID:       ${{ secrets.CLIENT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (remote state in Azure Storage)
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TFSTATE_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TFSTATE_SA }}" \
            -backend-config="container_name=${{ secrets.TFSTATE_CONTAINER }}" \
            -backend-config="key=infra.tfstate"

      - name: Terraform Fmt & Validate
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color

      - name: Terraform Apply
        if: github.event_name != 'pull_request'
        run: terraform apply -auto-approve
